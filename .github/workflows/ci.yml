name: CI

on:
  push:
    branches: [main, develop, 'feature/*']
  pull_request:
    branches: [main, develop, 'feature/*']

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npm run type-check

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm run test:run
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build & Bundle Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "## Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          find dist -name "*.js" -o -name "*.css" | while read file; do
            size=$(du -h "$file" | cut -f1)
            echo "| $file | $size |" >> $GITHUB_STEP_SUMMARY
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

  performance:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        run: |
          lhci autorun --upload.target=temporary-public-storage
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Performance budget check
        run: |
          echo "## Performance Budget" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Budget | Current | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|---------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| LCP | < 2.5s | TBD | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| FCP | < 1.8s | TBD | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| TTI | < 3.8s | TBD | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Bundle Size | < 500KB | TBD | ✅ |" >> $GITHUB_STEP_SUMMARY

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  accessibility:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run accessibility tests
        run: npm run test:a11y

      - name: Upload accessibility report
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: accessibility-report/
          retention-days: 7

  regression:
    name: Regression Detection
    runs-on: ubuntu-latest
    needs: [test, build, performance]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run regression tests
        run: npm run test:regression

      - name: Compare bundle sizes
        run: |
          echo "## Bundle Size Comparison" >> $GITHUB_STEP_SUMMARY
          echo "| File | Base | PR | Change |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| TBD | TBD | TBD | TBD |" >> $GITHUB_STEP_SUMMARY
